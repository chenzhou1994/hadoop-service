server:
  port: 8001
spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://47.98.236.124:3306/db01
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  elasticsearch:
    jest:
      uris: http://47.98.236.124:9200
  kafka:
    bootstrap-servers: 192.168.74.150:9092 #指定kafka 代理地址，可以多个
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer #指定消息key和消息体的编解码方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 0 #发送失败后再发送的次数
      batch-size: 16384  #批处理发送消息的数量
      buffer-memory: 33554432
      acks: all
    consumer:
      group-id: 0
      key-serializer: org.apache.kafka.common.serialization.StringSerializer #指定消息key和消息体的编解码方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
mybatis:
  config-location: classpath:mybatis/mybatis.cfg.xml
  mapper-locations: classpath:mapper/*


